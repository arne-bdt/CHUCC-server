spring:
  application:
    name: vc-server
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  # Security: Limit multipart file uploads
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

server:
  port: 8080
  shutdown: graceful
  # Security: Limit request body size to prevent DoS attacks
  tomcat:
    max-http-form-post-size: 10MB
    max-swallow-size: 10MB
  max-http-request-header-size: 16KB

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    enable:
      jvm: true
    tags:
      application: chucc-server

logging:
  level:
    kafka: ERROR
    "[org.apache.jena]": ERROR
    "[org.apache.kafka]": ERROR
    "[org.apache.zookeeper]": ERROR
    "[org.chucc]": WARN
    "[org.springframework]": ERROR
    "[org.springframework.kafka]": ERROR
    "[org.testcontainers]": ERROR
    "[state.change.logger]": ERROR
    "[tc.testcontainers]": ERROR


# SPARQL Version Control conformance level
# Level 1 (Basic): commits, branches, history, RDF Patch, strong ETags
# Level 2 (Advanced): three-way merge, conflicts, tags, revert, reset, cherry-pick, blame
vc:
  level: 2  # 1 or 2
  commits-enabled: true
  branches-enabled: true
  history-enabled: true
  rdf-patch-enabled: true
  merge-enabled: true
  conflict-detection-enabled: true
  tags-enabled: true
  revert-enabled: true
  reset-enabled: true
  cherry-pick-enabled: true
  blame-enabled: true
  snapshots-enabled: true
  snapshot-interval: 100  # Create snapshot every N commits
  snapshot-metadata-cache-ttl: 600  # Cache snapshot metadata for 10 minutes (0 = disabled)
  cache:
    max-size: 100  # Maximum number of cached dataset graphs
    keep-latest-per-branch: true  # Always cache latest commits
    ttl-minutes: 0  # No TTL by default (0 = disabled)

# Kafka event streaming configuration
kafka:
  bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
  topic-template: vc.{dataset}.events

  # Topic configuration (overridable via environment variables)
  partitions: ${KAFKA_PARTITIONS:3}
  replication-factor: ${KAFKA_REPLICATION_FACTOR:1}
  retention-ms: ${KAFKA_RETENTION_MS:-1}  # -1 for infinite retention
  compaction: ${KAFKA_COMPACTION:false}  # false for append-only (no log compaction)

  # Transactional ID prefix for producer transactions
  transactional-id-prefix: ${KAFKA_TRANSACTIONAL_ID_PREFIX:vc-tx-}

  # Producer configuration
  producer:
    retries: ${KAFKA_PRODUCER_RETRIES:3}
    acks: ${KAFKA_PRODUCER_ACKS:1}  # 1=leader only (dev), all=all replicas (prod)
    enable-idempotence: ${KAFKA_PRODUCER_IDEMPOTENCE:false}
    max-in-flight-requests: ${KAFKA_PRODUCER_MAX_IN_FLIGHT:5}
    compression-type: ${KAFKA_PRODUCER_COMPRESSION:none}
    linger-ms: ${KAFKA_PRODUCER_LINGER_MS:0}
    batch-size: ${KAFKA_PRODUCER_BATCH_SIZE:16384}

  # Consumer configuration
  consumer:
    auto-commit-interval-ms: ${KAFKA_CONSUMER_AUTO_COMMIT_INTERVAL:1000}
    enable-auto-commit: ${KAFKA_CONSUMER_ENABLE_AUTO_COMMIT:true}
    isolation-level: ${KAFKA_CONSUMER_ISOLATION:read_uncommitted}  # read_committed for prod
    max-poll-records: ${KAFKA_CONSUMER_MAX_POLL_RECORDS:500}

  # Snapshot store configuration
  snapshot-store:
    metadata-cache-max-size: 100  # Max number of cached snapshot metadata entries
    poll-timeout-seconds: 5  # Kafka consumer poll timeout

# Read Model Projector configuration
projector:
  kafka-listener:
    enabled: true  # Set to false in integration tests to disable async projection
  deduplication:
    enabled: true  # Enable event deduplication (at-least-once â†’ exactly-once)
    cache-size: 100000  # Max event IDs to cache (~5-10 MB RAM)

# Async Executor configuration
async:
  snapshot-executor:
    core-pool-size: 2
    max-pool-size: 4
    queue-capacity: 100
    await-termination-seconds: 60

# Materialized Views configuration
chucc:
  materialized-views:
    enabled: true
    max-branches: 25  # Maximum branches to keep in cache (LRU eviction)
    cache-stats-enabled: true  # Enable Caffeine cache statistics recording
    memory-warning-threshold-mb: 1000  # Warn when memory usage exceeds this threshold
    periodic-logging-enabled: true  # Enable periodic logging of cache statistics

  # Projection Retry configuration (fail-fast with exponential backoff)
  projection:
    retry:
      max-attempts: 10  # Total retry attempts before sending to DLQ
      initial-interval: 1000  # Initial backoff in ms (1 second)
      multiplier: 2.0  # Exponential multiplier (doubles each retry)
      max-interval: 60000  # Max backoff in ms (60 seconds cap)
